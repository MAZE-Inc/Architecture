@startuml kubernetes

!include <gcp/GCPCommon>
!include <gcp/Compute/Cloud_Functions>
!include <gcp/Networking/Cloud_Firewall_Rules>
!include <gcp/Compute/Compute_Engine>
!include <gcp/Storage/Cloud_Storage>

' Kubernetes
' !include <k8s>
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

' global definition
!includeurl KubernetesPuml/kubernetes_C4.puml
!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Container.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml
!includeurl KubernetesPuml/OSS/all.puml

KubernetesIng(lr_gateway, "인그래스", "")

Cluster_Boundary(liveReview_zzikda_bene, "Live Review cluster") {
    Namespace_Boundary(zzikda_bene, "찍다") {
        Pod_Boundary(lr_core_bene, "lr 코어") {
            Service_Boundary(svcs_bene, "서비스") {
                KubernetesCronjob(analytic_bene, "분석기", "1")
                KubernetesCronjob(demography_bene, "인구학", "2")
                KubernetesCronjob(aaa_bene, "aaa", "3")
            }
        }
        Pod_Boundary(pv_pod_bene, "pv pod") {
            KubernetesPv(pv_bene, "persistance volume", "5")
        }
        KubernetesPod(server_bene, "서버", "3")
    }
}
Cluster_Boundary(liveReview_zzikda_bean, "Live Review cluster") {
    Namespace_Boundary(zzikda_bean, "찍다") {
        Pod_Boundary(lr_core_bean, "lr 코어") {
            Service_Boundary(svcs_bean, "서비스") {
                KubernetesCronjob(analytic_bean, "분석기", "1")
                KubernetesCronjob(demography_bean, "인구학", "2")
                KubernetesCronjob(aaa_bean, "aaa", "3")
            }
        }
        Pod_Boundary(pv_pod_bean, "pv pod") {
            KubernetesPv(pv_bean, "persistance volume", "5")
        }
        KubernetesPod(server_bean, "서버", "3")
    }
}

Rel_R(lr_core_bene, pv_bene, "dispatch")
Rel_R(lr_core_bean, pv_bean, "dispatch")

Rel_R(lr_core_bene, lr_gateway, "fetch info.")
Rel_R(lr_core_bean, lr_gateway, "fetch info.")

Rel_U(server_bene, lr_gateway, "dispatch")
Rel_U(server_bean, lr_gateway, "dispatch")


@enduml